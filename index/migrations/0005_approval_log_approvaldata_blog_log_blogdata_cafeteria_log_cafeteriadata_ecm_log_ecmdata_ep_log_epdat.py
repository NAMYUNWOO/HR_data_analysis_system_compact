# Generated by Django 2.0.5 on 2018-08-24 10:41

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('index', '0004_score'),
    ]

    operations = [
        migrations.CreateModel(
            name='Approval_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('approve_date', models.DateTimeField()),
                ('approverID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appr_apprID', to='index.Employee')),
                ('requesterID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='appr_reqID', to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('approve_tot_request', models.FloatField(default=0, null=True)),
                ('approve_tot_sign', models.FloatField(default=0, null=True)),
                ('approve_mean_timeh', models.FloatField(default=0, null=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Blog_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('blogID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='BlogData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('blog_tot_visit', models.FloatField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Cafeteria_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.FloatField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('eval_date', models.DateField()),
                ('buyerID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='CafeteriaData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('food_tot_spend', models.FloatField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ECM_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('userECMID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='ECMData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('ecm_before_in79', models.FloatField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='EP_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='EPData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('ep_access_day_mean', models.FloatField(default=0, null=True)),
                ('ep_access_day_var', models.FloatField(default=0, null=True)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='IMS_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imstype', models.CharField(max_length=20)),
                ('eval_date', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='IMSData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('ims_tot_enroll', models.FloatField(default=0, null=True)),
                ('ims_tot_opinion_enroll', models.FloatField(default=0, null=True)),
                ('ims_tot_idea_enroll', models.FloatField(default=0, null=True)),
                ('ims_tot_board_enroll', models.FloatField(default=0, null=True)),
                ('ims_tot_board_opinion_enroll', models.FloatField(default=0, null=True)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Meeting_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('eval_date2', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('meeting_join_count', models.FloatField(default=0, null=True)),
                ('mean_meeting_time', models.FloatField(default=0, null=True)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PC_control_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('pccontrol_mean_timeh', models.FloatField(default=0, null=True)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PC_control_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval_date', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('eval_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('requesterID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PC_out_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('pcout_tot_request', models.FloatField(default=0, null=True)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PC_out_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('requesterID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PCM_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('pcm_tot_enroll', models.FloatField(default=0, null=True)),
                ('pcm_tot_remove', models.FloatField(default=0, null=True)),
                ('pcm_tot_check', models.FloatField(default=0, null=True)),
                ('pcm_tot_checked', models.FloatField(default=0, null=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='PCMData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('pcm_tot_enroll', models.FloatField(default=0, null=True)),
                ('pcm_tot_remove', models.FloatField(default=0, null=True)),
                ('pcm_tot_check', models.FloatField(default=0, null=True)),
                ('pcm_tot_checked', models.FloatField(default=0, null=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Portable_out_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('porta_tot_request', models.FloatField(default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Portable_out_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('requesterID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Thanks_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('thank_letter_tot_receive', models.FloatField(default=0, null=True)),
                ('thank_token_tot_receive', models.FloatField(default=0, null=True)),
                ('thank_msg_tot_receive', models.FloatField(default=0, null=True)),
                ('thank_note_tot_receive', models.FloatField(default=0, null=True)),
                ('thank_letter_tot_send', models.FloatField(default=0, null=True)),
                ('thank_token_tot_send', models.FloatField(default=0, null=True)),
                ('thank_msg_tot_send', models.FloatField(default=0, null=True)),
                ('thank_note_tot_send', models.FloatField(default=0, null=True)),
                ('thank_like_tot', models.FloatField(default=0, null=True)),
                ('thank_reply_tot', models.FloatField(default=0, null=True)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Thanks_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thxType', models.CharField(max_length=20)),
                ('writerType', models.CharField(max_length=20)),
                ('followType', models.CharField(max_length=20)),
                ('eval_date', models.DateField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='TMS_log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eval_date', models.DateTimeField()),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tms_main_id1', to='index.Employee')),
                ('employeeID2', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tms_coworker_id2', to='index.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='TMSData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employeeID_confirm', models.IntegerField(default=0)),
                ('eval_date', models.DateTimeField()),
                ('start_date', models.DateTimeField()),
                ('tms_tot_attendant', models.FloatField(default=0, null=True)),
                ('tms_tot_coworker', models.FloatField(default=0, null=True)),
                ('employeeID', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='index.Employee')),
            ],
        ),
    ]
